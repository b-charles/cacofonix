
%
% Dragon Roost Island
%
% Compositors: Kenta Nagata, Hajime Wakai, Toru Minegishi, Koji Kondo
% From: The Legend of Zelda: The Wind Waker
%

%#ok<*BDSCA>
clc

NoteInit_fr

[siB, si] = deal(si, siB);
[miB, mi] = deal(mi, miB);

% pause
P = [ S:B' bar ];

MarkerIntro = Note( 'marker', 'INTRO' );
MarkerA = Note( 'marker', 'A' );
MarkerB = Note( 'marker', 'B' );
MarkerC = Note( 'marker', 'C' );
MarkerB2 = Note( 'marker', 'B2' );
MarkerC2 = Note( 'marker', 'C2' );
MarkerD = Note( 'marker', 'D' );
MarkerEnd = Note( 'marker', 'END' );

%% Flute 1

F1_Intro = [ MarkerIntro P P P P ];

F1_A = [ MarkerA P P P S:[N N C] Note( '+' ) re:C bar ];

F1_B = [ MarkerB Note( '+' ) ...
	si:N' la:C si:N bar ...
	+do:N' la:[C N] bar ...
	la:D ~sol:[C' B] bar ...
	re:B S:C re:C bar ...
	si:N' la:C si:N bar ...
	Note( '++' ) do:N' fa:[C N] bar ...
	re:B' bar ...
	~re:B S:C -si:C bar ...
	MarkerEnd do:N' re:D ~do:[D N] bar ...
	~do:B S:C do:'.':C bar ...
	-si:N' -sol:[C N] bar ...
	~-sol:B S:C -si:'.':C bar ...
	do:N' re:D ~do:[D N] bar ...
	~do:[B C] -si:C bar ...
	-sol:B' bar ...
	~-sol:B' bar ...
	~-sol:B' bar ...
	~-sol:B' bar ...
	];

F1_C = [ MarkerC Note( '' ) P P P S:[B C] +re:C bar ];

F1_B2 = [ MarkerB2 Note( '+' ) ...
	si:N' la:C si:N bar ...
	+do:N' la:[C N] bar ...
	fa:D ~sol:[C' B] bar ...
	re:B S:C re:C bar ...
	si:N' la:C si:N bar ...
	Note( '++' ) do:N' fa:[C N] bar ...
	re:B' bar ...
	~re:B S:C -si:C bar ...
	do:N' re:D ~do:[D N] bar ...
	~do:B S:C do:'.':C bar ...
	re:N' -sol:[C N] bar ...
	~-sol:B S:C -si:C bar ...
	do:N' re:D ~do:[D N] bar ...
	~do:[B C] -si:C bar ...
	Note( '+' ) sol:B' bar ...
	~sol:B' bar ...
	~sol:B' bar ...
	~sol:[B C] fa:C bar ...
	sol:B' bar ...
	~sol:B' bar ...
	];

F1_C2 = [ MarkerC2 Note( '' ) ...
	~+sol:B' bar ~+sol:B' bar ...
	P P P P P ...
	S:B +fa:C ++re:C bar ];

F1_D = [ MarkerD Note( '++' ) ...
	sol:N' fa:[C N] bar ...
	re:N' -si:[C N] bar ...
	do:B' bar ...
	~do:N' re:C -sol:C -si:C bar ...
	do:B' bar ...
	~do:[B C] -si:C bar ...
	do:B' bar ...
	~do:[B C] re:C bar ...
	sol:N' fa:[C N] bar ...
	re:N' -si:[C N] bar ...
	do:B' bar ...
	~do:N' re:C -sol:C -si:C bar ...
	do:B' bar ...
	re:D do:[C' N C] -si:C bar ...
	do:B' bar ...
	~do:B' bar ...
	~do:B' bar ...
	~do:B' bar ...
	];

%% Flute 2

RIFF1 = [ V-1:'.':N' V-3:'.':N +V-1:'.':C bar ];
RIFF2 = [ V-1:'.':N V-3:'.':N +V-1:'.':N bar ];
RIFF2_ = [ V-1:'.':N V-3:'.':N V-1:'.':N bar ];

F2_Intro = [ MarkerIntro P P P P ];

F2_A = [ MarkerA Note( '' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	];

F2_B = [ MarkerB Note( '' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	si*CM*RIFF1 si*CM*RIFF2 ...
	MarkerEnd laB*CM*RIFF1 laB*CM*RIFF2 ...
	sol*Cm*RIFF1 sol*Cm*RIFF2 ...
	fa*CM*RIFF1 fa*CM*RIFF2 ...
	mi*CM*RIFF1 mi*CM*RIFF2 ...
	mi*CM*RIFF1 mi*CM*RIFF2 ...
	];

F2_C = [ MarkerC Note( '' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2_ ...
	];

F2_B2 = [ MarkerB2 Note( '' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2_ ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	si*CM*RIFF1 -si:'.':N -si:'.':N fa:'.':N bar ...
	laB*CM*RIFF1 laB*CM*RIFF2 ...
	sol*Cm*RIFF1 sol*Cm*RIFF2 ...
	fa*CM*RIFF1 fa*CM*RIFF2 ...
	mi*CM*RIFF1 mi*CM*RIFF2 ...
	do*CM7*RIFF1 do*CM7*RIFF1 ...
	laB*CM*RIFF1 laB*CM*RIFF2 ...
	];

F2_C2 = [ MarkerC2 Note( '' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2_ ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2_ ...
	];

F2_D = [ MarkerD P*18 ];

%% Guitar

V0 = V-0;

RIFF1 = [ V0:C V0:D V0:D V0:C V0:C V0:C V0:C bar ];
RIFF2 = [ V0:C' V0:D V0:C V0:D V0:D V0:C V0:C bar ];
RIFF3 = [ V0:C V0:C V0:C V0:D V0:D V0:C V0:C bar ];

GUI_Intro = [ MarkerIntro Note( '' ) ...
	( (re*CM*V0) .* [ C D D C C ~N bar ~B' ] ) / [ -re:B' bar ~-re:B' ] bar P P ];

GUI_A = [ MarkerA Note( '' ) ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 fa*CM  * RIFF3 ...
	];

GUI_B = [ MarkerB Note( '' ) ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 fa*CM  * RIFF3 ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	si*CM  * RIFF3 si*CM  * RIFF3 ...
	MarkerEnd laB*CM * RIFF1 laB*CM * RIFF2 ...
	sol*Cm * RIFF3 sol*Cm * RIFF3 ...
	fa*CM  * RIFF1 fa*CM  * RIFF2 ...
	mi*CM  * RIFF3 mi*CM  * RIFF3 ...
	mi*CM  * RIFF3 mi*CM*V0 .* [ C C C D D C ] fa*CM:C bar ...
	];

GUI_C = [ MarkerC Note( '' ) ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 re*Cm7 * RIFF2 ...
	];

GUI_B2 = [ MarkerB2 Note( '' ) ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 re*Cm7 * RIFF3 ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	si*CM  * RIFF3 si*CM  * RIFF2 ...
	laB*CM * RIFF1 laB*CM * RIFF2 ...
	sol*Cm * RIFF3 sol*Cm * RIFF3 ...
	fa*CM  * RIFF1 fa*CM  * RIFF2 ...
	mi*CM  * RIFF3 mi*CM  * RIFF3 ...
	do*CM7 * RIFF1 do*CM7 * RIFF2 ...
	laB*CM * RIFF3 laB*CM * RIFF3 ...
	];

GUI_C2 = [ MarkerC2 Note( '' ) ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 re*Cm7 * RIFF3 ...
	sol*Cm * RIFF1 fa*CM  * RIFF2 ...
	sol*Cm * RIFF3 re*Cm7 * RIFF3 ...
	];

GUI_D = [ MarkerD Note( '' ) ...
	mi*CM  * RIFF1 mi*CM  * RIFF2 ...
	re*Cm7 * RIFF3 re*Cm7 * RIFF3 ...
	do*Cm  * RIFF3 do*Cm  * RIFF3 ...
	re*Cm7 * RIFF3 re*Cm7 * RIFF3 ...
	mi*CM  * RIFF1 mi*CM  * RIFF2 ...
	re*Cm7 * RIFF3 re*Cm7 * RIFF3 ...
	do*CM7 * RIFF3 do*CM7 * RIFF3 ...
	laB*CM7* RIFF1 laB*CM7* RIFF2 ...
	laB*CM7* RIFF3 laB*CM7* RIFF3 ...
	];

%% BASS

BASS_Intro = [ MarkerIntro P P P P ];

BASS_A = [ MarkerA P P P P ];

BASS_B = [ MarkerB Note( '--' ) ...
	P*8 MarkerEnd P*8 ...
	P sol:'>':N re:'>':N -si:'>':N bar ...
	];

RIFF1 = [ V-1:'>':N' -V-3:N V-1:C bar ];
RIFF2 = [ V-1:'>':N -V-3:N V-1:N bar ];
RIFF1_ = [ V-1:'>':N' V-3:N V-1:C bar ];
RIFF2_ = [ V-1:'>':N V-3:N V-1:N bar ];

BASS_C = [ MarkerC Note( '--' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2 ...
	];

BASS_B2 = [ MarkerB2 Note( '--' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2 ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	si*CM*RIFF1 -si:N -si:N fa:N bar ...
	laB*CM*RIFF1 laB*CM*RIFF2 ...
	sol*Cm*RIFF1 sol*Cm*RIFF2 ...
	fa*CM*RIFF1 fa*CM*RIFF2 ...
	mi*CM*RIFF1 fa:C mi:C -si:C mi:C re:N bar ...
	do*CM7*RIFF1 +re:C +do:C sol:C do:C +do:N bar ...
	laB*CM*RIFF1 si:C laB:C mi:C laB:C -laB:C mi:C bar ...
	];

BASS_C2 = [ MarkerC2 Note( '--' ) ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2 ...
	sol*Cm*RIFF1 fa*CM*RIFF2 ...
	sol*Cm*RIFF1 re*Cm7*RIFF2 ...
	];

BASS_D = [ MarkerD Note( '--' ) ...
	mi*CM*RIFF1_ mi:N si:N -si:N bar ...
	re*Cm7*RIFF1_ re*Cm7*RIFF2_ ...
	do:N' fa:[C N] bar do*Cm*RIFF2_ ...
	re*Cm7*RIFF1_ re*Cm7*RIFF2_ ...
	mi*CM*RIFF1_ mi:N si:N -si:N bar ...
	re*Cm7*RIFF1_ re*Cm7*RIFF2_ ...
	do*CM*RIFF1 [ +re +do sol do +do si ].*C bar ...
	laB*CM7*RIFF1 +si:N +laB:N +mi:C +laB:C bar ...
	laB*CM7*RIFF1 laB*CM7*RIFF2 ...
	];

%% CLAP

RIFF1 = ( V .* [ N N N bar N N N bar ] ) / ( V .* [ N' N C bar C N N C bar ] );
RIFF2 = ( V .* [ N N N bar N N N bar ] ) / ( V .* [ N' N C bar N' D D C C bar ] );

CLAP_Intro = [ MarkerIntro RIFF1 RIFF2 ];
CLAP_A = [ MarkerA RIFF1 RIFF2 ];
CLAP_B = [ MarkerB RIFF1 RIFF2 RIFF1 RIFF2 MarkerEnd RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 ];
CLAP_C = [ MarkerC RIFF2 RIFF1 ];
CLAP_B2 = [ MarkerB2 RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 ];
CLAP_C2 = [ MarkerC2 RIFF2 RIFF1 RIFF2 RIFF1 ];
CLAP_D = [ MarkerD RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 RIFF1 RIFF2 ];

%% CACOFONIX

CODA = Note( 'Decresc', B'*8, '0' );

cacofonix( 'DragonRoostIsland', 'Tempo', 168, ...
	'Piccolo', [ DynFF F1_Intro F1_A F1_B F1_C F1_B2 F1_C2 F1_D F1_A CODA F1_B|MarkerEnd ], ...
	'Pan Flute', [ DynMP F2_Intro F2_A F2_B F2_C F2_B2 F2_C2 F2_D F2_A CODA F2_B|MarkerEnd ], ...
	'Nylon-String Guitar', [ DynMP GUI_Intro GUI_A GUI_B GUI_C GUI_B2 GUI_C2 GUI_D GUI_A CODA GUI_B|MarkerEnd ], ...
	'Acoustic Bass', [ DynMF BASS_Intro BASS_A BASS_B BASS_C BASS_B2 BASS_C2 BASS_D BASS_A CODA BASS_B|MarkerEnd ], ...
	'Castanets', [ DynMF CLAP_Intro CLAP_A CLAP_B CLAP_C CLAP_B2 CLAP_C2 CLAP_D CLAP_A CODA CLAP_B|MarkerEnd ] );
