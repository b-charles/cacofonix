
%
% Farewell Hyrule King
%
% Compositors: Kenta Nagata, Hajime Wakai, Toru Minegishi, Koji Kondo
% From: The Legend of Zelda: The Wind Waker
%

%#ok<*BDSCA>
clc

NoteInit_fr

[siB, si] = deal(si, siB);
[miB, mi] = deal(mi, miB);

Ped = Note( 'sustain', 'on' );
PedS = Note( 'sustain', 'off' );

MARK_INTRO = Note( 'marker', 'Intro' );
MARK_A = Note( 'marker', 'A' );
MARK_B = Note( 'marker', 'B' );
MARK_C = Note( 'marker', 'C' );
MARK_D = Note( 'marker', 'D' );
MARK_E = Note( 'marker', 'E' );

MARK_END = Note( 'marker', 'END' );

%% MAIN DROITE

MDIntro = [ Note( 'Tempo', 88 ) MARK_INTRO S:R bar S:R bar S:R bar S:R bar ];

MDA = [ MARK_A ...
	Note( '+0' ) DynP ...
	sol:B ~re:B bar ... % 5
	~re:N S:C sol:C ~laB:C ~si:[C T] ~solB:T ~si:T bar ...
	~sol:B ~re:B bar ...
	~re:B' S:N bar ...
	sol:B ~re:B bar ...
	~re:N S:C ~sol:C ~laB:C ~si:[C T] ~solB:T ~si:T bar ... %10
	~sol:B ~re:B bar ...
	~re:B' S:N bar ...
	];

MDB = [ MARK_B ...
	Note( '+' ) DynMF ...
	do:B ~-sol:B bar ... % 13
	~-sol:N S:C do:C ~fa:C ~mi:[C T] ~reB:T ~-siB:T bar ...
	~do:B ~-sol:B bar ... % 15
	~-sol:B' S:N bar ...
	Note( '+0' ) DynP ...
	sol:B ~re:B bar ...
	~re:N S:C ~sol:C ~laB:C ~si:[C T] ~solB:T ~si:T bar ...
	~sol:B ~re:B bar ...
	~re:B' S:N bar ... % 20
	];

MDC = [ MARK_C ...
	Note( '+0' ) DynMF ...
	fa:N' ~mi:D ~re:D ~do:C ~re:C ~fa:C ~+do:C bar ... % 21
	(~sol:B) / [ S:N S:C [ -siB+re do+mi re+fa do+mi -siB+re ] .* C ] bar ...
	fa:N' ~mi:D ~re:D ~do:C ~re:C ~fa:C ~+do:C bar ...
	(~sol:B) / [ S:N S:C [ -siB+re do+mi re+fa do+mi -siB+re ] .* C ] bar ...
	fa:N' ~mi:D ~re:D ~do:C ~re:C ~fa:C ~sol:C bar ... % 25
	(re:R) / [si:N' laB:D sol:D [ fa sol laB si ] .* C ] bar ...
	Note( 'cresc', R, 'ff' ) ...
	[ miB:B' miB:C miB:C] / [ +do:N' si:D la:D Note( 'rall', B, 80 ) [ sol la si +do ] .* C ] bar ...
	re+miB+sol+la++re:B re+miB+faD+la++re:B bar ...
	];

MDD = [ MARK_D ...
	Note( 'Tempo', 92 ) Note( '+0' ) ...
	[ sol la si +re ] .* D * 4 bar ... % 29
	[ sol la si +reB ] .* D * 4 bar ... % 30
	[ mi solB la +do ] .* D * 4 bar ...
	MARK_END [ sol la si +re ] .* D * 4 bar ...
	DynF [ sol la si +re ] .* D * 4 bar ...
	[ sol la si +reB ] .* D * 4 bar ...
	[ mi solB la +do ] .* D * 4 bar ... % 35
	Note( 'cresc', R, 'ff' ) ...
	[ sol la si +re ] .* D * 4 bar ...
	];

MDE = [ MARK_E ...
	Note( '+' ) DynFF ...
	mi+sol++mi:N' (mi+sol++mi).*[D D] [mi+sol++mi do+mi++do -sol+do+mi+sol mi+sol++mi].*C  bar ... % 37
	re+si++re:R bar ...
	do+mi++do:N' (do+mi++do).*[D D] [do+mi++do -sol+do+sol -mi+do+mi do+mi++do].*C bar ...
	-si+re+si:R bar ... % 40
	mi+sol++mi:N' (mi+sol++mi).*[D D] [mi+sol++mi do+mi++do -sol+do+mi+sol mi+sol++mi].*C  bar ...
	re+si++re:N' (re+si++re).*[D D] [re+si++re -si+re+si -si+re+sol re+si++re].*C bar ...
	do+mi++do:N' (do+mi++do).*[D D] [do+mi++do -solB+do+solB -mi+do+mi do+mi++do].*C bar ...
	-si+re+si:R bar ...
	];

%% MAIN GAUCHE

RIFF = ((V-1):R) / [ S:C (V-2):C ~(V-2):B' ];
TN = Note( 2/3 );

MGIntro = [ MARK_INTRO ...
	Note( '--' ) DynP ...
	Ped [ sol +re ] * RIFF bar ... % 1
	Ped [ sol +mi ] * RIFF bar ...
	Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF bar ...
	];

MGA = [ MARK_A ...
	Note( '--' ) ...
	Ped [ sol +re ] * RIFF bar ... % 5
	Ped [ sol +mi ] * RIFF bar ...
	Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF bar ...
	Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF bar ... % 10
	Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF bar ...
	];

MGB = [ MARK_B ...
	Note( '--' ) DynMF ...
	Ped [ do sol ] * RIFF bar ... % 13
	Ped [ do laB ] * RIFF bar ...
	Ped [ do sol ] * RIFF bar ... % 15
	Ped [ do laB ] * RIFF bar ...
	DynP Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF bar ...
	Ped [ sol +re ] * RIFF bar ...
	Ped [ sol +mi ] * RIFF PedS bar ... % 20
	];

MGC = [ MARK_C ...
	Note( '-' ) DynMF ...
	-fa+do+fa:R bar ... % 21
	-sol+re:R bar ...
	-fa+do+fa:R bar ...
	-sol+re+sol:R bar ...
	Ped -si+fa+si:R bar ... % 25
	Ped -laB+mi+laB:R bar ...
	Ped (-la+miB+la) .* [ B' C C ] bar ...
	Note( 'cresc', R, 'ff' ) ...
	Ped (-re+-la+re) .* [ B B ] bar ...
	];

MGD = [ MARK_D ...
	Note( '-' ) ...
	Ped -sol+sol:[ B C ] -la+la:C -si+si:C re++re:C bar ... % 29
	Ped doD++doD:B -la+la:B bar ... % 30
	Ped do++do:B -si+si:TN -faD+faD:TN -si+si:TN bar ...
	MARK_END Ped -sol+sol:R bar ...
	Ped -sol+sol:[ B C ] -la+la:C -si+si:C re++re:C bar ...
	Ped doD++doD:B -la+la:B bar ...
	Ped do++do:B -si+si:TN -faD+faD:TN -si+si:TN bar ... % 35
	Note( 'cresc', R, 'ff' ) ...
	Ped -sol+sol:R bar ...
	];

MGE = [ MARK_E ...
	Note( '--' ) DynFF ...
	Ped [ -do -sol do mi sol mi sol +do +mi +do +mi +sol ++do +sol ++do ++mi ] .* D bar ...
	Ped [ -sol re sol si +re si +re +sol +si +sol +si ++re ++sol ++re ++sol ++si ] .* D bar ...
	Ped [ -la mi sol +do +mi +do +mi +sol ++do +sol ++do ++mi ++sol ++mi ++sol +++do ] .* D bar ...
	Ped [ -sol re sol si +re si +re +sol +si +sol +si ++re ++sol ++re ++sol ++si ] .* D bar ...
	Ped [ -do -sol do mi sol mi sol +do +mi +do +mi +sol ++do +sol ++do ++mi ] .* D bar ...
	Ped [ -si re sol si +re si +re +sol +si +sol +si ++re ++sol ++re ++sol ++si ] .* D bar ...
	Ped [ -la mi solB +do +mi +do +mi +solB ++do +solB ++do ++mi ++solB ++mi ++solB ++la ] .* D bar ...
	Ped [ -sol re sol si +re si +re +sol +si +sol +si ++re ++sol ++re ++sol ++si ] .* D PedS bar ...
	];

%% CACOFONIX

finalDecresc = Note( 'Decresc', R*3, '0' );

cacofonix( 'FarewellHyruleKing.mid', 'Velocity', linspace( 50, 126, 8 ), ...
	'Piano', [ MDIntro MDA MDB MDC DynMF MDD MDE finalDecresc MDD|MARK_END ] / ...
	[ MGIntro MGA MGB MGC DynF MGD MGE finalDecresc MGD|MARK_END ] );
